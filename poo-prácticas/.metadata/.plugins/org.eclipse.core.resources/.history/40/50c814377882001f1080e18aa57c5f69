package geometria;

public class Rectangulo {
	//atributos
	private int ladoX; 
	private int ladoY; 
	private Point verticeII; 
	private Point verticeSI; 
	private Point verticeSD; 
	private Point verticeID; 
	
	
	
	//atributo calculado
	public int getPerimetro() {
		return 2*ladoY + 2*ladoX;
	}
	
	
	
	//getters
	public int getLadoX() {
		return ladoX;
	}
	
	public int getLadoY() {
		return ladoY;
	}
	
	public Point getVerticeII() {
		return verticeII; 
	}
	
	public Point getVerticeSI() {
		return verticeSI; 
	}
	
	public Point getVerticeSD() {
		return verticeSD; 
	}
	
	public Point getVerticeID() {
		return verticeID; 
	}
	
	
	
	//constructores
	public Rectangulo(Point vII, int lX, int lY) {
		verticeII = vII; 
		
		int xVerticeII = verticeII.getX();
		int yVerticeII = verticeII.getY();
		ladoX = lX; 
		ladoY = lY;
		
		verticeSI = new Point(verticeII.getX(), yVerticeII+verticeII.getY());
		verticeSI = new Point(xVerticeII+verticeII.getX(), yVerticeII+verticeII.getY());
		verticeID = new Point(xVerticeII+verticeII.getX(), verticeII.getY());
	}
	
	public Rectangulo(Point vII, Point vSD) {
		verticeII = vII; 
		verticeSD = vSD; 
	}
	
	
	
	//metodos
	public void desplazar(int incX, int incY) {
		verticeII.desplazar(incX, incY);
		verticeSI.desplazar(incX, incY);
		verticeSD.desplazar(incX, incY);
		verticeID.desplazar(incX, incY);
	}
	
	public void escalar(int porcentaje) {
		int desplazamientoX = ladoX - ladoX*porcentaje; 
		int desplazamientoY = ladoY - ladoY*porcentaje; 
		
		verticeSI.desplazar(0, desplazamientoY);
		verticeSD.desplazar(desplazamientoX, desplazamientoY);
		verticeID.desplazar(desplazamientoX, 0);
		
		
		ladoX = ladoX * porcentaje / 100; 
		ladoY = ladoY * porcentaje / 100; 
		
	}
	
}
